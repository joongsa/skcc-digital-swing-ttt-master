buildscript {
	ext {
		springBootVersion = '2.3.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

ext {
	mapstructVersion = "1.4.2.Final"
}

group 'org.caltech.miniswing.legacycustomerservice.legacycustomerclient'
version '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':util')

	// tomcat 뜬다
	//implementation("org.springframework.boot:spring-boot-starter-web")
	// netty 뜬다
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// mock web server
	testImplementation("com.squareup.okhttp3:mockwebserver:4.9.0")
	testImplementation("com.squareup.okhttp3:okhttp:4.9.0")

	implementation("javax.annotation:javax.annotation-api:1.3.2")
	annotationProcessor("javax.annotation:javax.annotation-api:1.3.2")

	// lombok
	compileOnly("org.projectlombok:lombok")
	testCompileOnly 'org.projectlombok:lombok'
	annotationProcessor("org.projectlombok:lombok")

	// mapstruct
	implementation("org.mapstruct:mapstruct:${mapstructVersion}")
	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}

dependencyManagement {
	imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
}
